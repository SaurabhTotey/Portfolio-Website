{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/Navbar.js","webpack:///./src/components/Header.js","webpack:///./src/components/Meta.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["React","createContext","PropTypes","object","string","isRequired","func","pages","Home","Qualifications","Programming","Music","3D Modelling","pageNames","Object","keys","NavbarItem","props","style","width","isActive","assign","backgroundColor","react_default","a","createElement","className","gatsby_link_default","to","currentPageName","Navbar","_this","_React$Component","call","this","state","currentRelativePath","componentDidMount","setState","window","location","href","replace","origin","render","_this2","map","pageName","pageLocation","length","Component","Header","Tooltip_default","TransitionComponent","Fade","enterDelay","enterTouchDelay","title","textAlign","components_Navbar","Meta","rel","jsx","global","__webpack_exports__","m","module","exports","require","default","ProdPageRenderer","_ref","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","propTypes","shape"],"mappings":"0PAY2BA,IAAMC,cAAc,IA0CvCC,IAAUC,OACTD,IAAUE,OAAOC,WAChBH,IAAUI,KACRJ,IAAUI,gBCpDhBC,EAAQ,CACbC,KAAQ,IACRC,eAAkB,kBAClBC,YAAe,eACfC,MAAS,SACTC,eAAgB,cAGXC,EAAYC,OAAOC,KAAKR,GAK9B,SAASS,EAAWC,GACnB,IAAIC,EAAQ,CAAEC,MAAUF,EAAME,MAAX,KAOnB,OANIF,EAAMG,WACTF,EAAKJ,OAAAO,OAAA,GACDH,EADC,CAEJI,gBAAiB,YAGXC,EAAAC,EAAAC,cAAA,MAAIC,UAAW,aAAcR,MAAOA,GAAOK,EAAAC,EAAAC,cAACE,EAAAH,EAAD,CAAME,UAAW,aAAcE,GAAIrB,EAAMU,EAAMY,kBAAmBZ,EAAMY,sBA+B7GC,cAtBd,SAAAA,EAAYb,GAAO,IAAAc,EAAA,OAClBA,EAAAC,EAAAC,KAAAC,KAAMjB,IAANiB,MACKC,MAAQ,CACZC,oBAAqB,MAHJL,sCAOnBM,kBAAA,WACCH,KAAKI,SAAS,CAAEF,oBAAqBG,OAAOC,SAASC,KAAKC,QAAQH,OAAOC,SAASG,OAAO,SAG1FC,OAAA,WAAS,IAAAC,EAAAX,KACR,OAAOX,EAAAC,EAAAC,cAAA,MAAIC,UAAW,UACrBb,EAAUiC,IAAI,SAAAC,GACb,IAAMC,EAAezC,EAAMwC,GAC3B,OAAOxB,EAAAC,EAAAC,cAACT,EAAD,CAAYI,SAAUyB,EAAKV,MAAMC,sBAAwBY,EAAc7B,MAAO,IAAMN,EAAUoC,OAAQpB,gBAAiBkB,WAjB7G/C,IAAMkD,WC5BZC,EAAA,kBACd5B,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,CAAS6B,oBAAqBC,IAAMC,WAAY,IAAOC,gBAAiB,IAAOC,MAAM,2DACpFlC,EAAAC,EAAAC,cAAA,MAAIP,MAAO,CAACwC,UAAW,WAAvB,kBAEDnC,EAAAC,EAAAC,cAACkC,EAAD,QCRaC,EAAA,kBACdrC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,QAAMoC,IAAK,OAAQpB,KAAM,6CAE1BlB,EAAAC,EAAAC,cAAA,SAAOqC,KAAG,EAACC,QAAM,GAAjB,+ICJaC,EAAA,0BACdzC,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACmC,EAAD,MACArC,EAAAC,EAAAC,cAAC0B,EAAD,6BCPF,IAAsBc,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAAC,GAAkB,IAAf/B,EAAe+B,EAAf/B,SACpBgC,EAAgBC,UAAOC,4BAA4BlC,EAASmC,UAClE,OAAO3E,IAAMyB,cAAcmD,IAApB9D,OAAAO,OAAA,CACLmB,WACAgC,iBACGA,EAAcK,QAIrBP,EAAiBQ,UAAY,CAC3BtC,SAAUtC,IAAU6E,MAAM,CACxBJ,SAAUzE,IAAUE,OAAOC,aAC1BA,YAGUiE","file":"component---src-pages-index-js-7a90113f615dc50e1077.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"../styles/Navbar.css\";\n\n//A map of page names to relative page paths\nconst pages = {\n\t\"Home\": \"/\",\n\t\"Qualifications\": \"/Qualifications\",\n\t\"Programming\": \"/Programming\",\n\t\"Music\": \"/Music\",\n\t\"3D Modelling\": \"/Modelling\"\n};\n//A list of page names\nconst pageNames = Object.keys(pages);\n\n/**\n * React component that represents a single item on the navbar\n */\nfunction NavbarItem(props) {\n\tlet style = { width: `${props.width}%` };\n\tif (props.isActive) {\n\t\tstyle = {\n\t\t\t...style,\n\t\t\tbackgroundColor: \"silver\"\n\t\t}\n\t}\n\treturn (<li className={\"navbarItem\"} style={style}><Link className={\"navbarLink\"} to={pages[props.currentPageName]}>{props.currentPageName}</Link></li>);\n}\n\n/**\n * React component that is a navbar\n * Handles setting navigation to all pages and figuring out current page\n */\nclass Navbar extends React.Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcurrentRelativePath: null\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.setState({ currentRelativePath: window.location.href.replace(window.location.origin,\"\") });\n\t}\n\n\trender() {\n\t\treturn <ul className={\"navbar\"}>{\n\t\t\tpageNames.map(pageName => {\n\t\t\t\tconst pageLocation = pages[pageName];\n\t\t\t\treturn <NavbarItem isActive={this.state.currentRelativePath === pageLocation} width={100 / pageNames.length} currentPageName={pageName} />\n\t\t\t})\n\t\t}</ul>\n\t}\n\n}\n\nexport default Navbar\n","import React from \"react\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Navbar from \"./Navbar\";\n\nexport default () => (\n\t<div>\n\t\t<Tooltip TransitionComponent={Fade} enterDelay={10000} enterTouchDelay={10000} title=\"Just in case you didn't know whose website you were on.\">\n\t\t\t<h1 style={{textAlign: \"center\"}}>Saurabh Totey</h1>\n\t\t</Tooltip>\n\t\t<Navbar />\n\t</div>\n)\n","import React from \"react\";\n\nexport default () => (\n\t<div>\n\t\t<head>\n\t\t\t<title>Saurabh Totey</title>\n\t\t\t<link rel={\"icon\"} href={\"images/SaurabhToteyBoulderMountains.jpg\"} />\n\t\t</head>\n\t\t<style jsx global>{`\n\t\t\tbody {\n\t\t\t\tbackground-color: #EEEEEE;\n\t\t\t\tcolor: #454545;\n\t\t\t}\n\n\t\t\ta {\n\t\t\t\tcolor: #0077AA;\n\t\t\t}\n\t\t`}</style>\n\t</div>\n)\n","import React from \"react\";\nimport Header from \"../components/Header\";\nimport Meta from \"../components/Meta\";\n\nexport default () => (\n\t<div>\n\t\t<Meta />\n\t\t<Header />\n\t</div>\n)\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}